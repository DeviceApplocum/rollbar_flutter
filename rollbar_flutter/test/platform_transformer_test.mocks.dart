// Mocks generated by Mockito 5.2.0 from annotations
// in rollbar_flutter/test/platform_transformer_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i3;
import 'package:rollbar_common/rollbar_common.dart' as _i1;
import 'package:rollbar_dart/src/data/payload/reading.dart' as _i5;
import 'package:rollbar_dart/src/telemetry.dart' as _i4;
import 'package:uuid/uuid.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTableSet_0<E extends _i1.Persistable<_i2.UuidValue>> extends _i3.Fake
    implements _i1.TableSet<E> {}

/// A class which mocks [Telemetry].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockTelemetry extends _i3.Mock implements _i4.Telemetry {
  MockTelemetry() {
    _i3.throwOnMissingStub(this);
  }

  @override
  _i1.TableSet<_i1.ReadingRecord> get readings =>
      (super.noSuchMethod(Invocation.getter(#readings),
              returnValue: _FakeTableSet_0<_i1.ReadingRecord>())
          as _i1.TableSet<_i1.ReadingRecord>);
  @override
  bool register(_i5.Reading? reading) =>
      (super.noSuchMethod(Invocation.method(#register, [reading]),
          returnValue: false) as bool);
}
